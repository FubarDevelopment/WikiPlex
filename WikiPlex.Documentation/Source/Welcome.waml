{topic:conceptual=75c1120e-3807-4896-b9af-7325866ae183}

{intro}
{p}WikiPlex is a regular expression based wiki engine that allows developers to integrate a wiki experience into an existing .NET application seamlessly and with little effort. Built and used by the CodePlex team, WikiPlex has been thoroughly tested in real-world scenarios!{p}
{intro}

{section:What and Why?}
{p}
	[url:CodePlex|http://www.codeplex.com] previously had a decent wiki engine that was written eon's ago. On the average, that wiki engine worked relatively well, but had a 
    very problematic performance bug that would cause rendering slowness occasionally. So, instead of attempting to fix the bug, we 
    decided to re-write the entire thing with the intensions of making it available to everyone! This time, we chose a different 
    approach for parsing the wiki markup (utilizing regular expressions) which has proven to give us a performance boost as well as 
    a relatively simpler architecture!
{p}
{p}
	The main question you may be asking yourself is - Why use WikiPlex over a different solution? Here's the simple answer: WikiPlex 
    is great if you already have a .NET application you'd like to embed a wiki interface into. Be it as simple as allowing users to 
    host their own homepage content, item descriptions, or comments - the possibilities are endless!
{p}
{section}

{section:Usage}
{p}WikiPlex was built in a way that it can easily be added into your infrastructure. Whether your using dependency injection or not, the code is as simple as the following:{p}
{code:c#}
	var engine = new WikiPlex.WikiEngine();
	string output = engine.Render("This is my wiki source!");
{code:c#}
{p}If you take a look at the overloads for Render, you'll see that you have a lot of flexibility as far as rendering various wiki segments differently at runtime.{p}
{code:c#}
	public interface IWikiEngine
	{
	   string Render(string wikiContent);
	   string Render(string wikiContent, IFormatter formatter);
	   string Render(string wikiContent, IEnumerable<IMacro> macros);
	   string Render(string wikiContent, IEnumerable<IMacro> macros, IFormatter formatter);
	}
{code:c#}
{section}

{section:Supported Macros}
{p}The following are the macros supported out of the box for WikiPlex. If you'd like to see the description and usage, please visit the markup guide.{p}
* Text Formatting
** Bold
** Italics
** Underline
** Strikethrough
** Superscript
** Subscript
* Headings
* Images
* Links
* Tables
* Left and Right Aligned Text
* Ordered and Unordered Lists
* RSS / Atom Feeds
* Source Code Blocks (both syntax highlighted and not)
* Silverlight
* Videos (Flash, Quicktime, Real, Windows Media, YouTube, and Channel9)
{section}

{topic}